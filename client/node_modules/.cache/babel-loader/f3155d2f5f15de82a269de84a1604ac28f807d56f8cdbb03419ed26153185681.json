{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\edwin\\\\Desktop\\\\mern-bug-tracker\\\\client\\\\src\\\\pages\\\\BugList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../api';\nimport BugItem from '../components/BugItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BugList = () => {\n  _s();\n  const [bugs, setBugs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchBugs();\n  }, []);\n  const fetchBugs = async () => {\n    try {\n      const response = await api.get('/bugs');\n      setBugs(response.data);\n    } catch (err) {\n      console.error('Failed to fetch bugs:', err);\n      setError('Failed to fetch bugs. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await api.delete(`/bugs/${id}`);\n      setBugs(prev => prev.filter(bug => bug._id !== id));\n    } catch (err) {\n      console.error('Failed to delete bug:', err);\n      setError('Failed to delete bug. Please try again.');\n    }\n  };\n  const handleStatusChange = async (id, status) => {\n    try {\n      const response = await api.put(`/bugs/${id}`, {\n        status\n      });\n      setBugs(prev => prev.map(bug => bug._id === id ? response.data : bug));\n    } catch (err) {\n      console.error('Failed to update bug status:', err);\n      setError('Failed to update bug status.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-red-500\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"bug-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bug Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), bugs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No bugs found. Create one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : bugs.map(bug => /*#__PURE__*/_jsxDEV(BugItem, {\n      bug: bug,\n      onDelete: handleDelete,\n      onStatusChange: handleStatusChange\n    }, bug._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(BugList, \"USVlwNJ7qk+Let6dly3GvEyFs7U=\");\n_c = BugList;\nexport default BugList;\nvar _c;\n$RefreshReg$(_c, \"BugList\");","map":{"version":3,"names":["React","useState","useEffect","api","BugItem","jsxDEV","_jsxDEV","BugList","_s","bugs","setBugs","loading","setLoading","error","setError","fetchBugs","response","get","data","err","console","handleDelete","id","delete","prev","filter","bug","_id","handleStatusChange","status","put","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","onDelete","onStatusChange","_c","$RefreshReg$"],"sources":["C:/Users/edwin/Desktop/mern-bug-tracker/client/src/pages/BugList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../api';\r\nimport BugItem from '../components/BugItem';\r\n\r\nconst BugList = () => {\r\n  const [bugs, setBugs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchBugs();\r\n  }, []);\r\n\r\n  const fetchBugs = async () => {\r\n    try {\r\n      const response = await api.get('/bugs');\r\n      setBugs(response.data);\r\n    } catch (err) {\r\n      console.error('Failed to fetch bugs:', err);\r\n      setError('Failed to fetch bugs. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await api.delete(`/bugs/${id}`);\r\n      setBugs(prev => prev.filter(bug => bug._id !== id));\r\n    } catch (err) {\r\n      console.error('Failed to delete bug:', err);\r\n      setError('Failed to delete bug. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = async (id, status) => {\r\n    try {\r\n      const response = await api.put(`/bugs/${id}`, { status });\r\n      setBugs(prev =>\r\n        prev.map(bug => (bug._id === id ? response.data : bug))\r\n      );\r\n    } catch (err) {\r\n      console.error('Failed to update bug status:', err);\r\n      setError('Failed to update bug status.');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div className=\"text-red-500\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div data-testid=\"bug-list\">\r\n      <h1>Bug Tracker</h1>\r\n      {bugs.length === 0 ? (\r\n        <p>No bugs found. Create one!</p>\r\n      ) : (\r\n        bugs.map(bug => (\r\n          <BugItem \r\n            key={bug._id} \r\n            bug={bug} \r\n            onDelete={handleDelete}\r\n            onStatusChange={handleStatusChange}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACda,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAC,OAAO,CAAC;MACvCP,OAAO,CAACM,QAAQ,CAACE,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACP,KAAK,CAAC,uBAAuB,EAAEM,GAAG,CAAC;MAC3CL,QAAQ,CAAC,yCAAyC,CAAC;IACrD,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMS,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,IAAI;MACF,MAAMnB,GAAG,CAACoB,MAAM,CAAC,SAASD,EAAE,EAAE,CAAC;MAC/BZ,OAAO,CAACc,IAAI,IAAIA,IAAI,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,GAAG,KAAKL,EAAE,CAAC,CAAC;IACrD,CAAC,CAAC,OAAOH,GAAG,EAAE;MACZC,OAAO,CAACP,KAAK,CAAC,uBAAuB,EAAEM,GAAG,CAAC;MAC3CL,QAAQ,CAAC,yCAAyC,CAAC;IACrD;EACF,CAAC;EAED,MAAMc,kBAAkB,GAAG,MAAAA,CAAON,EAAE,EAAEO,MAAM,KAAK;IAC/C,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMb,GAAG,CAAC2B,GAAG,CAAC,SAASR,EAAE,EAAE,EAAE;QAAEO;MAAO,CAAC,CAAC;MACzDnB,OAAO,CAACc,IAAI,IACVA,IAAI,CAACO,GAAG,CAACL,GAAG,IAAKA,GAAG,CAACC,GAAG,KAAKL,EAAE,GAAGN,QAAQ,CAACE,IAAI,GAAGQ,GAAI,CACxD,CAAC;IACH,CAAC,CAAC,OAAOP,GAAG,EAAE;MACZC,OAAO,CAACP,KAAK,CAAC,8BAA8B,EAAEM,GAAG,CAAC;MAClDL,QAAQ,CAAC,8BAA8B,CAAC;IAC1C;EACF,CAAC;EAED,IAAIH,OAAO,EAAE,oBAAOL,OAAA;IAAA0B,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIvB,KAAK,EAAE,oBAAOP,OAAA;IAAK+B,SAAS,EAAC,cAAc;IAAAL,QAAA,GAAC,SAAO,EAACnB,KAAK;EAAA;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEpE,oBACE9B,OAAA;IAAK,eAAY,UAAU;IAAA0B,QAAA,gBACzB1B,OAAA;MAAA0B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnB3B,IAAI,CAAC6B,MAAM,KAAK,CAAC,gBAChBhC,OAAA;MAAA0B,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEjC3B,IAAI,CAACsB,GAAG,CAACL,GAAG,iBACVpB,OAAA,CAACF,OAAO;MAENsB,GAAG,EAAEA,GAAI;MACTa,QAAQ,EAAElB,YAAa;MACvBmB,cAAc,EAAEZ;IAAmB,GAH9BF,GAAG,CAACC,GAAG;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACF,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA/DID,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AAiEb,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}